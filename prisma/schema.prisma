generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id           String      @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  email        String      @unique
  password     String
  role         String      @default("EMPLOYEE") // Roles can be "EMPLOYEE" or "ADMIN"
  position     String?
  productions  Production[] // Productions created by the user
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
}

model Production {
  id           String      @id @default(auto()) @map("_id") @db.ObjectId
  userId       String      @db.ObjectId  // The user who created the production
  productType  String
  startTime    DateTime
  endTime      DateTime?
  status       String      @default("IN_PROGRESS") // Status can be "IN_PROGRESS" or "COMPLETED"
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  user         User        @relation(fields: [userId], references: [id])
}

model FinishedProduct {
  id              String          @id @default(auto()) @map("_id") @db.ObjectId
  productType     String
  productionId    String          @db.ObjectId @unique // The production that created the product
  quantity        Int
  unitPrice       Float
  totalCost       Float
  status          String          @default("AVAILABLE") // Status can be "AVAILABLE" or "SOLD"
  inventoryDataId String          @db.ObjectId
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt 
  inventoryData   InventoryData   @relation(fields: [inventoryDataId], references: [id])
  salesReports    SalesReport[]
}

model InventoryData {
  id              String          @id @default(auto()) @map("_id") @db.ObjectId
  type            String
  quantity        Float 
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  finishedProducts FinishedProduct[]
}

model SalesReport {
  id              String          @id @default(auto()) @map("_id") @db.ObjectId
  finishedProductId String          @db.ObjectId @unique // The product that was sold
  salesDate       DateTime  
  quantitySold    Int
  totalRevenue    Float
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  finishedProduct FinishedProduct @relation(fields: [finishedProductId], references: [id])
}
